apiVersion: v1
kind: Namespace
metadata:
  name: payment-platform
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: payment-config
  namespace: payment-platform
data:
  DB_HOST: "mysql-service"
  DB_PORT: "3306"
  DB_NAME: "payment_db"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"
---
apiVersion: v1
kind: Secret
metadata:
  name: payment-secrets
  namespace: payment-platform
type: Opaque
data:
  DB_USERNAME: cGF5bWVudF91c2Vy  # payment_user
  DB_PASSWORD: cGF5bWVudF9wYXNz  # payment_pass
  REDIS_PASSWORD: cmVkaXNfcGFzcw==  # redis_pass
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-processing-platform
  namespace: payment-platform
  labels:
    app: payment-processing-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: payment-processing-platform
  template:
    metadata:
      labels:
        app: payment-processing-platform
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: payment-app
        image: payment-processing-platform:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: payment-config
              key: DB_HOST
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: payment-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: payment-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: payment-config
              key: REDIS_HOST
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: payment-config
              key: KAFKA_BOOTSTRAP_SERVERS
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/payments/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: payment-platform
spec:
  selector:
    app: payment-processing-platform
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: payment-hpa
  namespace: payment-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment-processing-platform
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80